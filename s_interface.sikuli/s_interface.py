from sikuli import *
# -*- coding: utf-8 -*-
import os

myPath = os.environ.get("GIT_HOME") + u"sikuli-tests"
if not myPath in sys.path:
    sys.path.append(myPath)
# Импорт ------------------------------
import baseFunction as BF
import keyer

# Смоктест
# Проверка общего состояния, наличия элементов управления
#	1.	Тест
#	1.1.	Вкладки: история, карта, отчёт (попутно переключаемся междуними, туда и обратно)
#	1.2.	кнопка со списком табов
def test1():
    BF.clearData()
    keyer.editKeyAndService("404C2A00-B173-4844-BA59-9A6F296479E7", "http://services.navstat.infokinetika.net")
    # Ключ тестового клиента "Автотестхолдинг"
    BF.startNavstat()
#-----------------------
    try:
        wait(Pattern("tab_hist.png").similar(0.80),15)
        print (u"Таб История изменений на месте")
    except:
        print (u"Нет таба История изменений или соседнего!")
        exit(1)
    click("1379425632955.png")
    try:
        wait("Kapra.png",5)
        print (u"Таб Карта на месте")
    except:
        print (u"Нет таба Карта или соседнего!")
        exit(2)
    click("1379425704457.png")
    try:
        wait("OwT.png",5)
        print (u"Таб Отчёт на месте")
    except:
        print (u"Нет таба с Отчёт или соседнего!")
        exit(3)
    click("1379426134745.png")
    try:
        wait(Pattern("tab_list.png").similar(0.90),5)
        print (u"Список табов на месте")
    except:
        print (u"Нет списка табов!")
        exit(4)
    click(Pattern("tab_list.png").similar(0.90).targetOffset(-38,13))
    try:
        wait("KamaX.png")
        print (u"Перешли на таб Карта через список табов")
    except:
        print (u"Не перешли на таб Карта через список табов!")
        exit(5)
    click("1379426134745.png")
    click(Pattern("tab_list.png").similar(0.90).targetOffset(-36,-8))
    try:
        wait("OwTX.png",5)
        print (u"Перешли на таб Отчёт через список табов")
    except:
        print (u"Не перешли на таб Отчёт через список табов!")
        exit(6)
    click("1379426134745.png")
    click(Pattern("tab_list.png").similar(0.00).targetOffset(-34,34))
    try:
        wait("Vlcropmnameo.png")
        print (u"Перешли на таб История изменений через список табов")
    except:
        print (u"Не перешли на таб История изменений через список табов!")
        exit(7)

    BF.closeCurTab()
    BF.closeCurTab()
    BF.closeCurTab()
    print (u"")
#    type(Key.F4, KeyModifier.ALT)
#--------------------------------------------------------------------------------------------------------------------
#	2.	Тест
#	2.1.	Панель объектов: объекты, зоны, места (сворачивание разворачивание, наличие на нём объектов)
#--------------------------------------------------------------------------------------------------------------------
#	3.	Тест
#	3.1.	Панели инструментов (сворачивание, разворачивание, переключение между панелями, наличие элементов интерфейса)
#--------------------------------------------------------------------------------------------------------------------
#	4.	Тест
#	4.1.	Журнал (сворачивание разворачивание)
#	4.2.	миникарта
#	4.3.	панелька масштаба
#	4.4.	координаты
#	4.5.	строка статуса (надо придумать как проверить актуальность времени
#--------------------------------------------------------------------------------------------------------------------
#	5.	Тест
#	5.1.	переключение режимов
#--------------------------------------------------------------------------------------------------------------------
#	6.	Тест
#	6.1.	переключение между картами (придумать как убедиться в том, что переключился)
#	6.2.	вынос карты в отдельное окно